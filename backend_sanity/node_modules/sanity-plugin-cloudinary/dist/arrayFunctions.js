"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _patchEvent = _interopRequireWildcard(require("part:@sanity/form-builder/patch-event"));

var _functionsDefault = _interopRequireDefault(require("part:@sanity/form-builder/input/array/functions-default"));

var _sanitySecrets = require("sanity-secrets");

var _SecretsConfigView = _interopRequireWildcard(require("./components/SecretsConfigView"));

var _cloudinaryAsset = _interopRequireDefault(require("./schema/cloudinaryAsset"));

var _utils = require("./utils");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var AssetListFunctions = props => {
  var _useSecrets = (0, _sanitySecrets.useSecrets)(_SecretsConfigView.namespace),
      secrets = _useSecrets.secrets,
      loading = _useSecrets.loading;

  var _React$useState = _react.default.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      showSettings = _React$useState2[0],
      setShowSettings = _React$useState2[1];

  var cloudinaryType = props.type.of.find(t => t.name === _cloudinaryAsset.default.name);

  var handleSelect = selected => {
    var onCreateValue = props.onCreateValue,
        onChange = props.onChange;
    var items = selected.assets.map(asset => Object.assign({}, asset, {
      // Schema version. In case we ever change our schema.
      _version: 1
    }, onCreateValue(cloudinaryType)));
    onChange(_patchEvent.default.from((0, _patchEvent.setIfMissing)([]), (0, _patchEvent.insert)(items, 'after', [-1])));
  };

  var actions = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_default2.default, {
    enabled: props.readOnly !== true && !loading,
    inverted: true,
    onClick: () => {
      (0, _utils.openMediaSelector)(secrets.cloudName, secrets.apiKey, true, // multi-selection
      handleSelect);
    }
  }, "Add multiple"), /*#__PURE__*/_react.default.createElement(_default2.default, {
    onClick: () => setShowSettings(true)
  }, "Configure"));

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, showSettings && /*#__PURE__*/_react.default.createElement(_SecretsConfigView.default, {
    onClose: () => setShowSettings(false)
  }), /*#__PURE__*/_react.default.createElement(_functionsDefault.default, props, cloudinaryType && actions));
};

var _default = AssetListFunctions;
exports.default = _default;
//# sourceMappingURL=arrayFunctions.js.map