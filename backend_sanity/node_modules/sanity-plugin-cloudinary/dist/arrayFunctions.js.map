{"version":3,"sources":["../src/arrayFunctions.jsx"],"names":["AssetListFunctions","props","namespace","secrets","loading","React","useState","showSettings","setShowSettings","cloudinaryType","type","of","find","t","name","cloudinaryAsset","handleSelect","selected","onCreateValue","onChange","items","assets","map","asset","Object","assign","_version","PatchEvent","from","actions","readOnly","cloudName","apiKey"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAIA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,GAAGC,KAAK,IAAI;AAAA,oBACL,+BAAWC,4BAAX,CADK;AAAA,MAC1BC,OAD0B,eAC1BA,OAD0B;AAAA,MACjBC,OADiB,eACjBA,OADiB;;AAAA,wBAEMC,eAAMC,QAAN,CAAe,KAAf,CAFN;AAAA;AAAA,MAE3BC,YAF2B;AAAA,MAEbC,eAFa;;AAIlC,MAAMC,cAAc,GAAGR,KAAK,CAACS,IAAN,CAAWC,EAAX,CAAcC,IAAd,CACrBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWC,yBAAgBD,IADX,CAAvB;;AAIA,MAAME,YAAY,GAAGC,QAAQ,IAAI;AAAA,QACvBC,aADuB,GACKjB,KADL,CACvBiB,aADuB;AAAA,QACRC,QADQ,GACKlB,KADL,CACRkB,QADQ;AAE/B,QAAMC,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgBC,GAAhB,CAAoBC,KAAK,IACrCC,MAAM,CAACC,MAAP,CACE,EADF,EAEEF,KAFF,EAGE;AACE;AACAG,MAAAA,QAAQ,EAAE;AAFZ,KAHF,EAOER,aAAa,CAACT,cAAD,CAPf,CADY,CAAd;AAWAU,IAAAA,QAAQ,CAACQ,oBAAWC,IAAX,CAAgB,8BAAa,EAAb,CAAhB,EAAkC,wBAAOR,KAAP,EAAc,OAAd,EAAuB,CAAC,CAAC,CAAF,CAAvB,CAAlC,CAAD,CAAR;AACD,GAdD;;AAgBA,MAAMS,OAAO,gBACX,yEACE,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAE5B,KAAK,CAAC6B,QAAN,KAAmB,IAAnB,IAA2B,CAAC1B,OADvC;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,oCACED,OAAO,CAAC4B,SADV,EAEE5B,OAAO,CAAC6B,MAFV,EAGE,IAHF,EAGQ;AACNhB,MAAAA,YAJF;AAMD;AAVH,oBADF,eAeE,6BAAC,iBAAD;AAAQ,IAAA,OAAO,EAAE,MAAMR,eAAe,CAAC,IAAD;AAAtC,iBAfF,CADF;;AAoBA,sBACE,4DACGD,YAAY,iBACX,6BAAC,0BAAD;AAAmB,IAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,KAAD;AAAjD,IAFJ,eAIE,6BAAC,yBAAD,EAA2BP,KAA3B,EACGQ,cAAc,IAAIoB,OADrB,CAJF,CADF;AAUD,CAtDD;;eAwDe7B,kB","sourcesContent":["import React from 'react';\nimport Button from 'part:@sanity/components/buttons/default';\nimport PatchEvent, {\n  setIfMissing,\n  insert,\n} from 'part:@sanity/form-builder/patch-event';\nimport DefaultArrayFunctions from 'part:@sanity/form-builder/input/array/functions-default';\n\nimport { useSecrets } from 'sanity-secrets';\nimport SecretsConfigView, { namespace } from './components/SecretsConfigView';\nimport cloudinaryAsset from './schema/cloudinaryAsset';\nimport { openMediaSelector } from './utils';\n\nconst AssetListFunctions = props => {\n  const { secrets, loading } = useSecrets(namespace);\n  const [showSettings, setShowSettings] = React.useState(false);\n\n  const cloudinaryType = props.type.of.find(\n    t => t.name === cloudinaryAsset.name\n  );\n\n  const handleSelect = selected => {\n    const { onCreateValue, onChange } = props;\n    const items = selected.assets.map(asset =>\n      Object.assign(\n        {},\n        asset,\n        {\n          // Schema version. In case we ever change our schema.\n          _version: 1,\n        },\n        onCreateValue(cloudinaryType)\n      )\n    );\n    onChange(PatchEvent.from(setIfMissing([]), insert(items, 'after', [-1])));\n  };\n\n  const actions = (\n    <>\n      <Button\n        enabled={props.readOnly !== true && !loading}\n        inverted\n        onClick={() => {\n          openMediaSelector(\n            secrets.cloudName,\n            secrets.apiKey,\n            true, // multi-selection\n            handleSelect\n          );\n        }}\n      >\n        Add multiple\n      </Button>\n      <Button onClick={() => setShowSettings(true)}>Configure</Button>\n    </>\n  );\n\n  return (\n    <>\n      {showSettings && (\n        <SecretsConfigView onClose={() => setShowSettings(false)} />\n      )}\n      <DefaultArrayFunctions {...props}>\n        {cloudinaryType && actions}\n      </DefaultArrayFunctions>\n    </>\n  );\n};\n\nexport default AssetListFunctions;\n"],"file":"arrayFunctions.js"}