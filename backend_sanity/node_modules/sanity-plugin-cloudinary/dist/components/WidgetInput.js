"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _patchEvent = _interopRequireWildcard(require("part:@sanity/form-builder/patch-event"));

var _buttonGrid = _interopRequireDefault(require("part:@sanity/components/buttons/button-grid"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _default3 = _interopRequireDefault(require("part:@sanity/components/fieldsets/default"));

var _pluginIcon = _interopRequireDefault(require("part:@sanity/base/plugin-icon"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _AssetPreview = _interopRequireDefault(require("./AssetPreview"));

var _templateObject;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var SetupButtonContainer = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n  display: block;\n  font-size: 0.8em;\n  transform: translate(0%, -10%);\n"])));

var WidgetInput = props => {
  var removeValue = () => {
    var onChange = props.onChange;
    onChange(_patchEvent.default.from([(0, _patchEvent.unset)()]));
  };

  var value = props.value,
      type = props.type,
      markers = props.markers,
      level = props.level,
      readOnly = props.readOnly,
      presence = props.presence,
      openMediaSelector = props.openMediaSelector;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(SetupButtonContainer, null, /*#__PURE__*/_react.default.createElement(_default2.default, {
    color: "primary",
    icon: _pluginIcon.default,
    kind: "simple",
    title: "Configure",
    onClick: props.onSetup,
    tabIndex: 1
  })), /*#__PURE__*/_react.default.createElement(_default3.default, {
    markers: markers,
    presence: presence,
    legend: type.title,
    description: type.description,
    level: level
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      textAlign: 'center'
    }
  }, /*#__PURE__*/_react.default.createElement(_AssetPreview.default, {
    value: value
  })), /*#__PURE__*/_react.default.createElement(_buttonGrid.default, {
    align: "start"
  }, /*#__PURE__*/_react.default.createElement(_default2.default, {
    disabled: readOnly,
    inverted: true,
    title: "Select an asset",
    kind: "default",
    onClick: openMediaSelector
  }, "Select\u2026"), /*#__PURE__*/_react.default.createElement(_default2.default, {
    disabled: readOnly || !value,
    color: "danger",
    inverted: true,
    title: "Remove asset",
    onClick: removeValue
  }, "Remove"))));
};

var _default = WidgetInput;
exports.default = _default;
//# sourceMappingURL=WidgetInput.js.map