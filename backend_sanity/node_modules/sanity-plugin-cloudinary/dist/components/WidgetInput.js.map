{"version":3,"sources":["../../src/components/WidgetInput.tsx"],"names":["SetupButtonContainer","styled","div","WidgetInput","props","removeValue","onChange","PatchEvent","from","value","type","markers","level","readOnly","presence","openMediaSelector","SetupIcon","onSetup","title","description","textAlign"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;AAEA,IAAMA,oBAAoB,GAAGC,0BAAOC,GAAV,yKAA1B;;AAmBA,IAAMC,WAAW,GAAIC,KAAD,IAAkB;AACpC,MAAMC,WAAW,GAAG,MAAM;AAAA,QAChBC,QADgB,GACHF,KADG,CAChBE,QADgB;AAExBA,IAAAA,QAAQ,CAACC,oBAAWC,IAAX,CAAgB,CAAC,wBAAD,CAAhB,CAAD,CAAR;AACD,GAHD;;AADoC,MAOlCC,KAPkC,GAchCL,KAdgC,CAOlCK,KAPkC;AAAA,MAQlCC,IARkC,GAchCN,KAdgC,CAQlCM,IARkC;AAAA,MASlCC,OATkC,GAchCP,KAdgC,CASlCO,OATkC;AAAA,MAUlCC,KAVkC,GAchCR,KAdgC,CAUlCQ,KAVkC;AAAA,MAWlCC,QAXkC,GAchCT,KAdgC,CAWlCS,QAXkC;AAAA,MAYlCC,QAZkC,GAchCV,KAdgC,CAYlCU,QAZkC;AAAA,MAalCC,iBAbkC,GAchCX,KAdgC,CAalCW,iBAbkC;AAgBpC,sBACE,yEACE,6BAAC,oBAAD,qBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAEC,mBAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,OAAO,EAAEZ,KAAK,CAACa,OALjB;AAME,IAAA,QAAQ,EAAE;AANZ,IADF,CADF,eAWE,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,QAAQ,EAAEG,QAFZ;AAGE,IAAA,MAAM,EAAEJ,IAAI,CAACQ,KAHf;AAIE,IAAA,WAAW,EAAER,IAAI,CAACS,WAJpB;AAKE,IAAA,KAAK,EAAEP;AALT,kBAOE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE;AAAb;AAAZ,kBACE,6BAAC,qBAAD;AAAc,IAAA,KAAK,EAAEX;AAArB,IADF,CAPF,eAWE,6BAAC,mBAAD;AAAY,IAAA,KAAK,EAAC;AAAlB,kBACE,6BAAC,iBAAD;AACE,IAAA,QAAQ,EAAEI,QADZ;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAC,iBAHR;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,OAAO,EAAEE;AALX,oBADF,eAUE,6BAAC,iBAAD;AACE,IAAA,QAAQ,EAAEF,QAAQ,IAAI,CAACJ,KADzB;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAC,cAJR;AAKE,IAAA,OAAO,EAAEJ;AALX,cAVF,CAXF,CAXF,CADF;AA8CD,CA9DD;;eAgEeF,W","sourcesContent":["import React from 'react';\nimport PatchEvent, { unset } from 'part:@sanity/form-builder/patch-event';\nimport ButtonGrid from 'part:@sanity/components/buttons/button-grid';\nimport Button from 'part:@sanity/components/buttons/default';\nimport Fieldset from 'part:@sanity/components/fieldsets/default';\nimport SetupIcon from 'part:@sanity/base/plugin-icon';\nimport { Marker } from '@sanity/types';\nimport styled from 'styled-components';\nimport { CloudinaryAsset } from '../schema/cloudinaryAsset';\nimport AssetPreview from './AssetPreview';\n\nconst SetupButtonContainer = styled.div`\n  position: relative;\n  display: block;\n  font-size: 0.8em;\n  transform: translate(0%, -10%);\n`;\n\ntype Props = {\n  type: Record<string, any>;\n  onChange: (patches: any) => void;\n  value: CloudinaryAsset | undefined;\n  level: number;\n  readOnly: boolean;\n  markers: Marker[];\n  presence: any[];\n  openMediaSelector: () => void;\n  onSetup: () => void;\n};\n\nconst WidgetInput = (props: Props) => {\n  const removeValue = () => {\n    const { onChange } = props;\n    onChange(PatchEvent.from([unset()]));\n  };\n\n  const {\n    value,\n    type,\n    markers,\n    level,\n    readOnly,\n    presence,\n    openMediaSelector,\n  } = props;\n\n  return (\n    <>\n      <SetupButtonContainer>\n        <Button\n          color=\"primary\"\n          icon={SetupIcon}\n          kind=\"simple\"\n          title=\"Configure\"\n          onClick={props.onSetup}\n          tabIndex={1}\n        />\n      </SetupButtonContainer>\n      <Fieldset\n        markers={markers}\n        presence={presence}\n        legend={type.title}\n        description={type.description}\n        level={level}\n      >\n        <div style={{ textAlign: 'center' }}>\n          <AssetPreview value={value} />\n        </div>\n\n        <ButtonGrid align=\"start\">\n          <Button\n            disabled={readOnly}\n            inverted\n            title=\"Select an asset\"\n            kind=\"default\"\n            onClick={openMediaSelector}\n          >\n            Selectâ€¦\n          </Button>\n          <Button\n            disabled={readOnly || !value}\n            color=\"danger\"\n            inverted\n            title=\"Remove asset\"\n            onClick={removeValue}\n          >\n            Remove\n          </Button>\n        </ButtonGrid>\n      </Fieldset>\n    </>\n  );\n};\n\nexport default WidgetInput;\n"],"file":"WidgetInput.js"}